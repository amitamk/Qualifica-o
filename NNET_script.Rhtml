<!--begin.rcode
library(ggplot2)
library(GGally)
library(nnet)
set.seed(999)

redshifts <- read.csv("redshift_between0and1.csv")
#redshifts <- read.csv("redshift_between0and7.csv")
redshifts <- redshifts[c("u","g","r","i","z","redshift")]
redshifts <- as.data.frame(scale(redshifts))

npoints_train = as.integer(dim(redshifts)[1]*2/3)

Sigmas <- data.frame(c(0),c(0),c(0),c(0),c(0),c(0),c(0),c(0),c(0),c(0),c(0))
names(Sigmas)<-c("neurons","sigma1","sigma2","sigma3","sigma4","sigma5","sigma6","sigma7","sigma8","sigma9","sigma10")

#for(neurons in c(5,seq(10,100,10))){
for(neurons in c(5,seq(10,100,10))){
  Sigma <- c()
  for(i in seq(1,10)){
    #redshifts <- sample(redshifts)
    samp <- sample(npoints_train)
    nnet.fit <- nnet(redshift ~ ., data=redshifts, size=neurons, subset = samp, maxit = 10000, trace=TRUE, linout=TRUE)
    nnet.predict <- predict(nnet.fit, redshifts[-samp,])
    redshiftsV <- redshifts[-samp,]
    #MSE <- mean((nnet.predict - redshiftsV$redshift)^2)
    
    Sigma[i] <- 1.48*median(abs((nnet.predict-redshiftsV$redshift) - median(nnet.predict-redshiftsV$redshift))/(1+redshiftsV$redshift))
    
    redshiftsV$predicted <- nnet.predict
  # Remove data frame column after plotting!
    redshiftsV$predicted <- NULL
  }

  #newrow <- c(neurons,max(Sigma),min(Sigma),mean(Sigma))
  #results <- rbind(results,newrow)
  newrow <- c(neurons,Sigma)
  Sigmas <- rbind(Sigmas,newrow)
}
#write.csv(results, file = "results_5_10_20_50_100.csv")
#write.csv(Sigmas, file = "Sigmas_nnet_specz0a7.csv")
write.csv(Sigmas, file = "Sigmas_nnet_specz0a1.csv")

#close(f)
end.rcode-->